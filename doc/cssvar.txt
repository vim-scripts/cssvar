*cssvar.txt* Filetype plugin for using variables in CSS

Version 1.0


INTRODUCTION
============
This plugin allows you to define and use variables in cascading stylesheets and
make simple calculations with them. For example:

    [pagewidth = 1000]
    #wrapper { 
    width: [pagewidth]px;
    margin: [pagewidth/4]px}

In the target CSS file this will become:

    #wrapper { 
    width: 1000px;
    margin: 250px}

You can assign the value of a color to a variable and use it anywhere in the
stylesheet. When you change the assignment, the value is updated in the whole
stylesheet.

    [textcolor = #09c]
    h1 {color: [textcolor]}

The variables are surrounded by two delimiters which you can define in the
plugin file. In the examples above square brackets are used but any printable
ascii character, not used in the CSS code, will do. 

    ^textcolor = #09c$

It's possible to use the same character as opening and closing delimiter.

    |textcolor = #09c|

(Tested with: ^ $ ` ~ | ? \ [ ] < >)


HOW IT WORKS
============
The plugin uses two CSS files. One source file (in the current buffer) with
the CSS code and the variables and one target file with pure CSS and
calculated variables. This last file is generated when the plugin is invoked
and you should link to this file in the (X)HTML.
The source file must have a suffix in it's name. The generated stylesheet will
have the same name minus this suffix. A source file with the name
"layout-dev.css" will generate a target file with the name "layout.css" in the
same directory. The suffix can be any text starting with a hyphen (this can be
changed to another character in the plugin file).
If there's already a file named "layout.css" in the directory this file will
be overridden.

VARIABLE NAMES
==============
Valid variable names may consist of letters, digits and characters not used
for the calculations. So you can't use the next characters -+.%()/*. The name
must start with a letter. 


ARITHMETIC EXAMPLES
===================
Assignment:             [margin = 200]

Division:               [margin/3]

Multiplication:         [margin*2]

Addition:               [margin+margin+10]

Subtraction:            [margin-10.5]

Percentage:             [margin * 25.5%]

Overriding precedence:  [((margin+10)/3)*4]

Operator precedence:    % / * - +

Space is ignored:       [ (( margin + 10 )*  3 ) / 4 ] 

Augmented assignment:   [margin = margin + 20]


OVERRIDING DEFAULTS IN THE STYLESHEET ITSELF
============================================
This can be done with a command string starting with !!. The string will be
removed from the target CSS file.

Changing the delimiters
-----------------------
This is done like this:
!! op=^ cl=$

Where ^ is the new opening delimiter and $ the new closing delimeter. This
might be useful when the default delimiters are used in a block of CSS code.
For example: 
                             /* default delimiters are: [ ] */
!! op=^ cl=$                 /* delimiters are now: ^ $  */ 
span[class = example] {...}  /* the attribute selector will not be affected */
!! op=[ cl=]                 /* back to [ ] */

Changing both delimeters to the same character
----------------------------------------------
!! op=` cl=`

Changing the errorstring
------------------------
The errorstring is written in the target file if something goes wrong. Useless
to change in the stylesheet, just for the sake of completeness.
!! er = //

Changing the command string prefix (default is !!)
--------------------------------------------------
!! cm=@@


INSTALLATION
============
Put css_var.vim in your file type plugin directory ~/.vim/ftplugin. Open the
file and change the defaults to your liking.

To invoke the plugin:
:call CSSvar()

You can put a mapping in your .vimrc to call the plugin like this:
nmap <F5> <Plug>CSSvar
imap <F5> <C-O><Plug>CSSvar


REQUIREMENTS
============
This plugin requires Python-enabled Vim.
Tested with Vim 7.1 and Python 2.5.2 on Linux and with MacVim on Mac OS X.  


LIMITATIONS
===========
It's not possible to use Unicode characters as delimiters yet.


MAINTAINER
==========
Benno van Keulen <bne AT ziggo DOT nl>




vim:tw=78:ts=8:ft=help:norl:

